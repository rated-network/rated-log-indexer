# This is an example configuration file. Check /templates for more examples.

inputs:
  - integration: cloudwatch
    integration_prefix: rated_example
    type: logs
    cloudwatch:
      region: us-east-1
      aws_access_key_id: AKIAXXXXXXX
      aws_secret_access_key: X/XXXX+XXXXX
      logs_config:
        log_group_name: "/aws/apprunner/prod-rated-api/xxxxxxxxx/application"
        filter_pattern: '{ ($.event = "request_finished" || $.event = "request_error") }'
    filters:
      version: 1
      log_format: json_dict
      log_example: { }
      fields:
        - key: "status_code"
          field_type: "integer"
          path: "status_code"
        - key: "customer_id"
          field_type: "string"
          path: "org.id"
        - key: "path"
          field_type: "string"
          path: "request_route_name"
        - key: "took"
          field_type: "float"
          path: "took"
    offset:
      type: redis
      override_start_from: true
      start_from: 1724803200000
      start_from_type: bigint
      redis:
        host: redis
        port: 6379
        db: 0
  - integration: google
    integration_prefix: "rated_example"
    type: logs
    google:
      project_id: "placeholder-project"
      auth_method: "service_account"  # or "application_default_credentials"
      credentials_path: "local_path_to_service_account.json"
      config_type: "objects"
      storage_config:
        bucket_name: "placeholder-bucket"
        input_type: "logs"  # should match the type value from the outer scope
        logs_config:
          log_features:
            id: "log-uuid"  # should be a unique identifier allowing idempotent ingestion
            timestamp: "timestamp"
        prefix: "bucket-prefix/"
    filters:
      version: 1
      log_format: json_dict
      log_example: { }
      fields:
        - key: "customer_id"
          value: "customer_example"
          field_type: "string"
          path: "log_body.customer_details.customer_id"
        - key: "log_feature"
          value: "0"
          field_type: "integer"
          path: "log_body.log_feature"
    offset:
      type: redis
      override_start_from: true
      start_from: 1724803200000
      start_from_type: bigint
      redis:
        host: redis
        port: 6379
        db: 0

output:
  type: "rated"
  rated:
      ingestion_id: "xxxxx-xx-xx-xx-xxxxx"
      ingestion_key: "xxxxx"
      ingestion_url: "https://api.rated.co/v1/ingest"

secrets:
  use_secrets_manager: false
